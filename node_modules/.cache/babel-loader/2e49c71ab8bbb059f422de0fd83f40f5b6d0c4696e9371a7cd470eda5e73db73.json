{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleem\\\\glutenapp\\\\gluten-free-checker\\\\src\\\\Autocomplete.js\",\n  _s = $RefreshSig$();\n// src/Autocomplete.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (searchTerm.length > 2) {\n      axios.get(`https://world.openfoodfacts.org/cgi/search.pl?search_terms=${searchTerm}&search_simple=1&action=process&json=1`).then(response => {\n        setSuggestions(response.data.products);\n      }).catch(error => console.log(error));\n    } else {\n      setSuggestions([]);\n    }\n  }, [searchTerm]);\n  const handleSelectProduct = product => {\n    // Navigate to the ProductDetail page with the selected product's id\n    navigate(`/product/${product.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a product...\",\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.slice(0, 5).map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelectProduct(product),\n        children: product.product_name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Autocomplete, \"0JfbbCc1eKTTS2uLvKaThDEwzko=\", false, function () {\n  return [useNavigate];\n});\n_c = Autocomplete;\nexport default Autocomplete;\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Autocomplete","_s","searchTerm","setSearchTerm","suggestions","setSuggestions","navigate","length","get","then","response","data","products","catch","error","console","log","handleSelectProduct","product","id","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","onClick","product_name","_c","$RefreshReg$"],"sources":["C:/Users/Aleem/glutenapp/gluten-free-checker/src/Autocomplete.js"],"sourcesContent":["// src/Autocomplete.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Autocomplete = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (searchTerm.length > 2) {\r\n            axios.get(`https://world.openfoodfacts.org/cgi/search.pl?search_terms=${searchTerm}&search_simple=1&action=process&json=1`)\r\n                .then(response => {\r\n                    setSuggestions(response.data.products);\r\n                })\r\n                .catch(error => console.log(error));\r\n        } else {\r\n            setSuggestions([]);\r\n        }\r\n    }, [searchTerm]);\r\n\r\n    const handleSelectProduct = (product) => {\r\n        // Navigate to the ProductDetail page with the selected product's id\r\n        navigate(`/product/${product.id}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Search for a product...\" \r\n                onChange={(e) => setSearchTerm(e.target.value)} \r\n            />\r\n            <ul>\r\n                {suggestions.slice(0, 5).map(product => (\r\n                    <li key={product.id} onClick={() => handleSelectProduct(product)}>\r\n                        {product.product_name}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Autocomplete;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,IAAIO,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;MACvBX,KAAK,CAACY,GAAG,CAAE,8DAA6DN,UAAW,wCAAuC,CAAC,CACtHO,IAAI,CAACC,QAAQ,IAAI;QACdL,cAAc,CAACK,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC;MAC1C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAC3C,CAAC,MAAM;MACHT,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,MAAMe,mBAAmB,GAAIC,OAAO,IAAK;IACrC;IACAZ,QAAQ,CAAE,YAAWY,OAAO,CAACC,EAAG,EAAC,CAAC;EACtC,CAAC;EAED,oBACIpB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,yBAAyB;MACrCC,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF/B,OAAA;MAAAqB,QAAA,EACKhB,WAAW,CAAC2B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACd,OAAO,iBAChCnB,OAAA;QAAqBkC,OAAO,EAAEA,CAAA,KAAMhB,mBAAmB,CAACC,OAAO,CAAE;QAAAE,QAAA,EAC5DF,OAAO,CAACgB;MAAY,GADhBhB,OAAO,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAtCID,YAAY;EAAA,QAGGH,WAAW;AAAA;AAAAsC,EAAA,GAH1BnC,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}