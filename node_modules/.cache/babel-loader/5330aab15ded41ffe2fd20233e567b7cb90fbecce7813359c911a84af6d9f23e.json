{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const ProductDetail=()=>{const{id}=useParams();const navigate=useNavigate();const[product,setProduct]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[glutenInfo,setGlutenInfo]=useState('');const[warningMessage,setWarningMessage]=useState('');// Add a state for the warning message\nuseEffect(()=>{setIsLoading(true);axios.get(\"https://world.openfoodfacts.org/api/v0/product/\".concat(id,\".json\")).then(response=>{if(response.data&&response.data.product){var _response$data$produc;setProduct(response.data.product);// Check for explicit gluten-free labeling first\nif((_response$data$produc=response.data.product.labels_tags)!==null&&_response$data$produc!==void 0&&_response$data$produc.includes('en:gluten-free')){setGlutenInfo('This product is explicitly labeled as gluten-free.');}else{// If not labeled as gluten-free, analyze ingredients for gluten\nanalyzeIngredientsForGluten(response.data.product);}}else{setError(\"Product not found\");}setIsLoading(false);}).catch(err=>{setError(\"Error fetching product details\");setIsLoading(false);});return()=>{document.body.style.backgroundColor='';// Reset background color\n};},[id]);const analyzeIngredientsForGluten=product=>{const glutenIngredients=['wheat','barley','rye','oats','malt','brewer’s yeast'];const foundIngredients=glutenIngredients.filter(ingredient=>{var _product$ingredients_;return(_product$ingredients_=product.ingredients_text)===null||_product$ingredients_===void 0?void 0:_product$ingredients_.toLowerCase().includes(ingredient);});if(foundIngredients.length>0){setGlutenInfo(\"Contains gluten ingredients: \".concat(foundIngredients.join(', '),\".\"));}else{setGlutenInfo('No gluten ingredients explicitly found.');setWarningMessage('Warning: Please double-check ingredients as a precaution.');// Set warning message\n}};useEffect(()=>{// Update background color based on glutenInfo\nupdateBackgroundColor();},[glutenInfo]);const updateBackgroundColor=()=>{if(glutenInfo.includes('explicitly labeled as gluten-free')){document.body.style.backgroundColor='#e0f8e0';// Light green for gluten-free products\n}else if(glutenInfo.includes('Contains gluten ingredients')){document.body.style.backgroundColor='#f8e0e0';// Light red for products containing gluten\n}else{document.body.style.backgroundColor='#f8f0e0';// Light orange for uncertain cases\n}};if(isLoading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsx(\"div\",{children:error});return/*#__PURE__*/_jsxs(\"div\",{className:\"product-detail\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(-1),style:{marginBottom:'20px'},children:\"Back to Search\"}),/*#__PURE__*/_jsx(\"h2\",{children:product.product_name}),/*#__PURE__*/_jsx(\"img\",{src:product.image_url,alt:product.product_name,style:{maxWidth:'200px',maxHeight:'200px',display:'block',margin:'auto'}}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Brand: \",product.brands]}),product.ingredients_text&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ingredients:\"}),/*#__PURE__*/_jsx(\"p\",{children:product.ingredients_text})]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:glutenInfo})}),warningMessage&&/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'0.8rem',marginTop:'10px'},children:warningMessage}),\" \"]});};export default ProductDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProductDetail","id","navigate","product","setProduct","isLoading","setIsLoading","error","setError","glutenInfo","setGlutenInfo","warningMessage","setWarningMessage","get","concat","then","response","data","_response$data$produc","labels_tags","includes","analyzeIngredientsForGluten","catch","err","document","body","style","backgroundColor","glutenIngredients","foundIngredients","filter","ingredient","_product$ingredients_","ingredients_text","toLowerCase","length","join","updateBackgroundColor","children","className","onClick","marginBottom","product_name","src","image_url","alt","maxWidth","maxHeight","display","margin","brands","fontSize","marginTop"],"sources":["C:/Users/Aleem/glutenapp/gluten-free-checker/src/ProductDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ProductDetail = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [product, setProduct] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [glutenInfo, setGlutenInfo] = useState('');\r\n    const [warningMessage, setWarningMessage] = useState(''); // Add a state for the warning message\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`https://world.openfoodfacts.org/api/v0/product/${id}.json`)\r\n            .then(response => {\r\n                if (response.data && response.data.product) {\r\n                    setProduct(response.data.product);\r\n                    // Check for explicit gluten-free labeling first\r\n                    if (response.data.product.labels_tags?.includes('en:gluten-free')) {\r\n                        setGlutenInfo('This product is explicitly labeled as gluten-free.');\r\n                    } else {\r\n                        // If not labeled as gluten-free, analyze ingredients for gluten\r\n                        analyzeIngredientsForGluten(response.data.product);\r\n                    }\r\n                } else {\r\n                    setError(\"Product not found\");\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch(err => {\r\n                setError(\"Error fetching product details\");\r\n                setIsLoading(false);\r\n            });\r\n\r\n        return () => {\r\n            document.body.style.backgroundColor = ''; // Reset background color\r\n        };\r\n    }, [id]);\r\n\r\n    const analyzeIngredientsForGluten = (product) => {\r\n        const glutenIngredients = ['wheat', 'barley', 'rye', 'oats', 'malt', 'brewer’s yeast'];\r\n        const foundIngredients = glutenIngredients.filter(ingredient =>\r\n            product.ingredients_text?.toLowerCase().includes(ingredient)\r\n        );\r\n\r\n        if (foundIngredients.length > 0) {\r\n            setGlutenInfo(`Contains gluten ingredients: ${foundIngredients.join(', ')}.`);\r\n        } else {\r\n            setGlutenInfo('No gluten ingredients explicitly found.');\r\n            setWarningMessage('Warning: Please double-check ingredients as a precaution.'); // Set warning message\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update background color based on glutenInfo\r\n        updateBackgroundColor();\r\n    }, [glutenInfo]);\r\n\r\n    const updateBackgroundColor = () => {\r\n        if (glutenInfo.includes('explicitly labeled as gluten-free')) {\r\n            document.body.style.backgroundColor = '#e0f8e0'; // Light green for gluten-free products\r\n        } else if (glutenInfo.includes('Contains gluten ingredients')) {\r\n            document.body.style.backgroundColor = '#f8e0e0'; // Light red for products containing gluten\r\n        } else {\r\n            document.body.style.backgroundColor = '#f8f0e0'; // Light orange for uncertain cases\r\n        }\r\n    };\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"product-detail\">\r\n            <button onClick={() => navigate(-1)} style={{ marginBottom: '20px' }}>Back to Search</button>\r\n            <h2>{product.product_name}</h2>\r\n            <img src={product.image_url} alt={product.product_name} style={{ maxWidth: '200px', maxHeight: '200px', display: 'block', margin: 'auto' }} />\r\n            <p>Brand: {product.brands}</p>\r\n            {product.ingredients_text && (\r\n                <>\r\n                    <h3>Ingredients:</h3>\r\n                    <p>{product.ingredients_text}</p>\r\n                </>\r\n            )}\r\n            <p><strong>{glutenInfo}</strong></p>\r\n            {warningMessage && <p style={{ fontSize: '0.8rem', marginTop: '10px' }}>{warningMessage}</p>} {/* Display the warning message with a smaller font size */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}