{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleem\\\\glutenapp\\\\gluten-free-checker\\\\src\\\\ProductDetail.js\",\n  _s = $RefreshSig$();\n// src/ProductDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n  const [alternatives, setAlternatives] = useState([]);\n  const [glutenInfo, setGlutenInfo] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProduct = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`https://world.openfoodfacts.org/api/v0/product/${id}.json`);\n        if (response.data && response.data.product) {\n          setProduct(response.data.product);\n          document.body.style.backgroundColor = getBackgroundColor(response.data.product);\n          checkIngredientsForGluten(response.data.product);\n        } else {\n          setError(\"Product not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching product details:\", error);\n        setError(\"Error fetching product details\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProduct();\n    return () => {\n      document.body.style.backgroundColor = ''; // Reset to default\n    };\n  }, [id]);\n  const checkIngredientsForGluten = product => {\n    const glutenIngredients = ['wheat', 'barley', 'rye', 'oats', 'malt', 'brewer’s yeast'];\n    const foundIngredients = [];\n    glutenIngredients.forEach(ingredient => {\n      if (product.ingredients_text && product.ingredients_text.toLowerCase().includes(ingredient)) {\n        foundIngredients.push(ingredient);\n      }\n    });\n    if (foundIngredients.length > 0) {\n      setGlutenInfo(`Contains gluten ingredients: ${foundIngredients.join(', ')}.`);\n    } else {\n      setGlutenInfo('No gluten ingredients found, but it is uncertain whether there is gluten or not.');\n    }\n  };\n  const getBackgroundColor = product => {\n    var _product$labels_tags, _product$allergens_ta;\n    if ((_product$labels_tags = product.labels_tags) !== null && _product$labels_tags !== void 0 && _product$labels_tags.includes('en:gluten-free')) {\n      return '#e0f8e0'; // Light green for gluten-free products\n    } else if ((_product$allergens_ta = product.allergens_tags) !== null && _product$allergens_ta !== void 0 && _product$allergens_ta.includes('en:gluten') || glutenInfo.includes('Contains gluten ingredients')) {\n      return '#f8e0e0'; // Light red for products containing gluten\n    }\n    return '#f8f0e0'; // Light orange for products not clearly labeled\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Back to Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: product.product_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), product.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.image_url,\n      alt: product.product_name,\n      style: {\n        maxWidth: '200px',\n        maxHeight: '200px',\n        display: 'block',\n        margin: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Brand: \", product.brands]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), product.ingredients_text && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.ingredients_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: glutenInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductDetail, \"a2XlyEzzFdyqzhqzGy550ENYoqE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductDetail","_s","id","navigate","product","setProduct","alternatives","setAlternatives","glutenInfo","setGlutenInfo","isLoading","setIsLoading","error","setError","fetchProduct","response","get","data","document","body","style","backgroundColor","getBackgroundColor","checkIngredientsForGluten","console","glutenIngredients","foundIngredients","forEach","ingredient","ingredients_text","toLowerCase","includes","push","length","join","_product$labels_tags","_product$allergens_ta","labels_tags","allergens_tags","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","marginBottom","product_name","image_url","src","alt","maxWidth","maxHeight","display","margin","brands","_c","$RefreshReg$"],"sources":["C:/Users/Aleem/glutenapp/gluten-free-checker/src/ProductDetail.js"],"sourcesContent":["// src/ProductDetail.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ProductDetail = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [product, setProduct] = useState(null);\r\n    const [alternatives, setAlternatives] = useState([]);\r\n    const [glutenInfo, setGlutenInfo] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProduct = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await axios.get(`https://world.openfoodfacts.org/api/v0/product/${id}.json`);\r\n                if (response.data && response.data.product) {\r\n                    setProduct(response.data.product);\r\n                    document.body.style.backgroundColor = getBackgroundColor(response.data.product);\r\n                    checkIngredientsForGluten(response.data.product);\r\n                } else {\r\n                    setError(\"Product not found\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching product details:\", error);\r\n                setError(\"Error fetching product details\");\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProduct();\r\n        return () => {\r\n            document.body.style.backgroundColor = ''; // Reset to default\r\n        };\r\n    }, [id]);\r\n\r\n    const checkIngredientsForGluten = (product) => {\r\n        const glutenIngredients = ['wheat', 'barley', 'rye', 'oats', 'malt', 'brewer’s yeast'];\r\n        const foundIngredients = [];\r\n\r\n        glutenIngredients.forEach((ingredient) => {\r\n            if (product.ingredients_text && product.ingredients_text.toLowerCase().includes(ingredient)) {\r\n                foundIngredients.push(ingredient);\r\n            }\r\n        });\r\n\r\n        if (foundIngredients.length > 0) {\r\n            setGlutenInfo(`Contains gluten ingredients: ${foundIngredients.join(', ')}.`);\r\n        } else {\r\n            setGlutenInfo('No gluten ingredients found, but it is uncertain whether there is gluten or not.');\r\n        }\r\n    };\r\n\r\n    const getBackgroundColor = (product) => {\r\n        if (product.labels_tags?.includes('en:gluten-free')) {\r\n            return '#e0f8e0'; // Light green for gluten-free products\r\n        } else if (product.allergens_tags?.includes('en:gluten') || glutenInfo.includes('Contains gluten ingredients')) {\r\n            return '#f8e0e0'; // Light red for products containing gluten\r\n        }\r\n        return '#f8f0e0'; // Light orange for products not clearly labeled\r\n    };\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"product-detail\">\r\n            <button onClick={() => navigate(-1)} style={{ marginBottom: '20px' }}>Back to Search</button>\r\n            <h2>{product.product_name}</h2>\r\n            {product.image_url && (\r\n                <img src={product.image_url} alt={product.product_name} style={{ maxWidth: '200px', maxHeight: '200px', display: 'block', margin: 'auto' }} />\r\n            )}\r\n            <p>Brand: {product.brands}</p>\r\n            {product.ingredients_text && (\r\n                <>\r\n                    <h3>Ingredients:</h3>\r\n                    <p>{product.ingredients_text}</p>\r\n                </>\r\n            )}\r\n            <p><strong>{glutenInfo}</strong></p>\r\n            {/* Alternatives display logic... */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMsB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7BH,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMI,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,kDAAiDd,EAAG,OAAM,CAAC;QAC7F,IAAIa,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACb,OAAO,EAAE;UACxCC,UAAU,CAACU,QAAQ,CAACE,IAAI,CAACb,OAAO,CAAC;UACjCc,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAGC,kBAAkB,CAACP,QAAQ,CAACE,IAAI,CAACb,OAAO,CAAC;UAC/EmB,yBAAyB,CAACR,QAAQ,CAACE,IAAI,CAACb,OAAO,CAAC;QACpD,CAAC,MAAM;UACHS,QAAQ,CAAC,mBAAmB,CAAC;QACjC;MACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;QACZY,OAAO,CAACZ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDC,QAAQ,CAAC,gCAAgC,CAAC;MAC9C,CAAC,SAAS;QACNF,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDG,YAAY,CAAC,CAAC;IACd,OAAO,MAAM;MACTI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;EACL,CAAC,EAAE,CAACnB,EAAE,CAAC,CAAC;EAER,MAAMqB,yBAAyB,GAAInB,OAAO,IAAK;IAC3C,MAAMqB,iBAAiB,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,CAAC;IACtF,MAAMC,gBAAgB,GAAG,EAAE;IAE3BD,iBAAiB,CAACE,OAAO,CAAEC,UAAU,IAAK;MACtC,IAAIxB,OAAO,CAACyB,gBAAgB,IAAIzB,OAAO,CAACyB,gBAAgB,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACH,UAAU,CAAC,EAAE;QACzFF,gBAAgB,CAACM,IAAI,CAACJ,UAAU,CAAC;MACrC;IACJ,CAAC,CAAC;IAEF,IAAIF,gBAAgB,CAACO,MAAM,GAAG,CAAC,EAAE;MAC7BxB,aAAa,CAAE,gCAA+BiB,gBAAgB,CAACQ,IAAI,CAAC,IAAI,CAAE,GAAE,CAAC;IACjF,CAAC,MAAM;MACHzB,aAAa,CAAC,kFAAkF,CAAC;IACrG;EACJ,CAAC;EAED,MAAMa,kBAAkB,GAAIlB,OAAO,IAAK;IAAA,IAAA+B,oBAAA,EAAAC,qBAAA;IACpC,KAAAD,oBAAA,GAAI/B,OAAO,CAACiC,WAAW,cAAAF,oBAAA,eAAnBA,oBAAA,CAAqBJ,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MACjD,OAAO,SAAS,CAAC,CAAC;IACtB,CAAC,MAAM,IAAI,CAAAK,qBAAA,GAAAhC,OAAO,CAACkC,cAAc,cAAAF,qBAAA,eAAtBA,qBAAA,CAAwBL,QAAQ,CAAC,WAAW,CAAC,IAAIvB,UAAU,CAACuB,QAAQ,CAAC,6BAA6B,CAAC,EAAE;MAC5G,OAAO,SAAS,CAAC,CAAC;IACtB;IACA,OAAO,SAAS,CAAC,CAAC;EACtB,CAAC;EAED,IAAIrB,SAAS,EAAE,oBAAOb,OAAA;IAAA0C,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAI/B,KAAK,EAAE,oBAAOf,OAAA;IAAA0C,QAAA,EAAM3B;EAAK;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACI9C,OAAA;IAAK+C,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC3B1C,OAAA;MAAQgD,OAAO,EAAEA,CAAA,KAAM1C,QAAQ,CAAC,CAAC,CAAC,CAAE;MAACiB,KAAK,EAAE;QAAE0B,YAAY,EAAE;MAAO,CAAE;MAAAP,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7F9C,OAAA;MAAA0C,QAAA,EAAKnC,OAAO,CAAC2C;IAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC9BvC,OAAO,CAAC4C,SAAS,iBACdnD,OAAA;MAAKoD,GAAG,EAAE7C,OAAO,CAAC4C,SAAU;MAACE,GAAG,EAAE9C,OAAO,CAAC2C,YAAa;MAAC3B,KAAK,EAAE;QAAE+B,QAAQ,EAAE,OAAO;QAAEC,SAAS,EAAE,OAAO;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChJ,eACD9C,OAAA;MAAA0C,QAAA,GAAG,SAAO,EAACnC,OAAO,CAACmD,MAAM;IAAA;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BvC,OAAO,CAACyB,gBAAgB,iBACrBhC,OAAA,CAAAE,SAAA;MAAAwC,QAAA,gBACI1C,OAAA;QAAA0C,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB9C,OAAA;QAAA0C,QAAA,EAAInC,OAAO,CAACyB;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACnC,CACL,eACD9C,OAAA;MAAA0C,QAAA,eAAG1C,OAAA;QAAA0C,QAAA,EAAS/B;MAAU;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnC,CAAC;AAEd,CAAC;AAAC1C,EAAA,CAlFID,aAAa;EAAA,QACAP,SAAS,EACPC,WAAW;AAAA;AAAA8D,EAAA,GAF1BxD,aAAa;AAoFnB,eAAeA,aAAa;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}