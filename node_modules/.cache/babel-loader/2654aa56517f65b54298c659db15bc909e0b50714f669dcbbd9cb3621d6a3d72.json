{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleem\\\\glutenapp\\\\gluten-free-checker\\\\src\\\\ProductDetail.js\",\n  _s = $RefreshSig$();\n// src/ProductDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [product, setProduct] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(`https://world.openfoodfacts.org/api/v0/product/${id}.json`).then(response => {\n      if (response.data && response.data.product) {\n        setProduct(response.data.product);\n      } else {\n        setError(\"Product not found\");\n      }\n      setIsLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching product details:\", error);\n      setError(\"Error fetching product details\");\n      setIsLoading(false);\n    });\n  }, [id]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n\n  // Check for gluten-free label or allergens indicating gluten\n  const isGlutenFree = product.labels_tags && product.labels_tags.includes('en:gluten-free');\n  const mayContainGluten = product.allergens_tags && product.allergens_tags.some(allergen => ['en:wheat', 'en:barley', 'en:rye', 'en:oats'].includes(allergen));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: product.product_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Brand: \", product.brands]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isGlutenFree && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This product is labeled as gluten-free.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this), !isGlutenFree && mayContainGluten && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Warning: This product is not labeled gluten-free and may contain wheat, barley, rye, or oats.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 51\n    }, this), !isGlutenFree && !mayContainGluten && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This product does not have gluten listed as an allergen.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductDetail, \"GYsQdN09TPgz/vtN9/0TK9+Mdn4=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ProductDetail","_s","id","product","setProduct","isLoading","setIsLoading","error","setError","get","then","response","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","isGlutenFree","labels_tags","includes","mayContainGluten","allergens_tags","some","allergen","product_name","brands","_c","$RefreshReg$"],"sources":["C:/Users/Aleem/glutenapp/gluten-free-checker/src/ProductDetail.js"],"sourcesContent":["// src/ProductDetail.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ProductDetail = () => {\r\n    const { id } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`https://world.openfoodfacts.org/api/v0/product/${id}.json`)\r\n            .then(response => {\r\n                if (response.data && response.data.product) {\r\n                    setProduct(response.data.product);\r\n                } else {\r\n                    setError(\"Product not found\");\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching product details:\", error);\r\n                setError(\"Error fetching product details\");\r\n                setIsLoading(false);\r\n            });\r\n    }, [id]);\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    // Check for gluten-free label or allergens indicating gluten\r\n    const isGlutenFree = product.labels_tags && product.labels_tags.includes('en:gluten-free');\r\n    const mayContainGluten = product.allergens_tags && product.allergens_tags.some(allergen => ['en:wheat', 'en:barley', 'en:rye', 'en:oats'].includes(allergen));\r\n\r\n    return (\r\n        <div>\r\n            <h2>{product.product_name}</h2>\r\n            <p>Brand: {product.brands}</p>\r\n            {isGlutenFree && <p>This product is labeled as gluten-free.</p>}\r\n            {!isGlutenFree && mayContainGluten && <p>Warning: This product is not labeled gluten-free and may contain wheat, barley, rye, or oats.</p>}\r\n            {!isGlutenFree && !mayContainGluten && <p>This product does not have gluten listed as an allergen.</p>}\r\n            {/* Display more product details as needed */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}